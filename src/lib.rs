// SPDX-FileCopyrightText: Copyright Â© 2025 AerynOS Developers
//
// SPDX-License-Identifier: MPL-2.0

use chrono::{DateTime, Utc};
use serde::Serialize;

pub mod host;

#[derive(Debug, Clone, Eq, PartialEq, Ord, PartialOrd, Serialize)]
pub struct VersionMetadata {
    pub version: String,
    pub downloads: Vec<VersionedAsset>,
    pub release_notes: Option<String>,
    pub released_at: Option<DateTime<Utc>>,
}

/// Represents some discovered release asset.
/// The discovery of a version is usually bound to encountering
/// a release asset, so we store the version string here.
#[derive(Debug, Clone, Eq, PartialEq, Ord, PartialOrd, Serialize)]
pub struct VersionedAsset {
    /// The URL of the release.
    pub url: String,

    /// The type of asset.
    pub kind: AssetKind,

    /// When the asset was released.
    pub released_at: Option<DateTime<Utc>>,

    /// When the asset was last updated.
    pub updated_at: Option<DateTime<Utc>>,
}

#[derive(Debug, Clone, Eq, PartialEq, Ord, PartialOrd, Serialize)]
pub enum AssetKind {
    /// ie github release from a tag
    Autogenerated,

    /// ie a manually uploaded artefact
    Release,

    /// ie a detached signature
    Signature,

    /// ie a checksum file
    Checksum,
}
